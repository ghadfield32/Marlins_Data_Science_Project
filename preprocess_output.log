   season level_abbr  batter_id  ...  pitch_group  outcome   age
0    2023        mlb        235  ...           FB      out  32.8
1    2023        mlb       3182  ...           OS      out  29.2
2    2023        mlb       3856  ...           OS      out  29.7
3    2023        mlb       2017  ...           BB      out  23.4
4    2023        mlb       1594  ...           FB      out  35.3

[5 rows x 15 columns]
Index(['season', 'level_abbr', 'batter_id', 'pitcher_id', 'exit_velo',
       'launch_angle', 'spray_angle', 'hangtime', 'hit_type', 'batter_hand',
       'pitcher_hand', 'batter_height', 'pitch_group', 'outcome', 'age'],
      dtype='object')
=== Raw data null counts ===
 • 'exit_velo': 97979 missing
 • 'launch_angle': 9130 missing
 • 'spray_angle': 6227 missing
 • 'hangtime': 75968 missing
 • 'hit_type': 201 missing
Raw → (1344651, 15) //  Feature‑engineered → (1344651, 36)
   season level_abbr  batter_id  ...  age_centered  season_centered  level_idx
0    2023        MLB        235  ...           6.5              2.0          2
1    2023        MLB       3182  ...           2.9              2.0          2
2    2023        MLB       3856  ...           3.4              2.0          2
3    2023        MLB       2017  ...          -2.9              2.0          2
4    2023        MLB       1594  ...           9.0              2.0          2

[5 rows x 36 columns]
ID columns:          ['season', 'batter_id', 'pitcher_id']
Ordinal columns:     ['level_abbr', 'age_bin', 'la_bin', 'spray_bin', 'outcome_val']
Nominal columns:     ['hit_type', 'outcome', 'pitch_group', 'batter_hand', 'pitcher_hand', 'hand_match', 'pitch_hand_match', 'same_hand', 'is_barrel', 'hard_hit', 'near_barrel']
All categorical:     ['level_abbr', 'age_bin', 'la_bin', 'spray_bin', 'outcome_val', 'hit_type', 'outcome', 'pitch_group', 'batter_hand', 'pitcher_hand', 'hand_match', 'pitch_hand_match', 'same_hand', 'is_barrel', 'hard_hit', 'near_barrel']
Numerical columns:   ['exit_velo', 'launch_angle', 'spray_angle', 'hangtime', 'ev_la_product', 'ev_la_sqrt', 'est_distance', 'player_ev_mean50', 'player_ev_std50', 'pitcher_ev_mean50', 'level_idx', 'season_centered', 'age_centered']
Model features:      ['launch_angle', 'spray_angle', 'hangtime', 'ev_la_product', 'ev_la_sqrt', 'est_distance', 'player_ev_mean50', 'player_ev_std50', 'pitcher_ev_mean50', 'level_idx', 'season_centered', 'age_centered', 'hit_type', 'outcome', 'pitch_group', 'batter_hand', 'pitcher_hand', 'hand_match', 'pitch_hand_match', 'same_hand', 'is_barrel', 'hard_hit', 'near_barrel', 'level_abbr', 'age_bin', 'la_bin', 'spray_bin', 'outcome_val']
Target columns:   exit_velo
All raw columns:     ['season', 'batter_id', 'pitcher_id', 'level_abbr', 'age_bin', 'la_bin', 'spray_bin', 'outcome_val', 'hit_type', 'outcome', 'pitch_group', 'batter_hand', 'pitcher_hand', 'hand_match', 'pitch_hand_match', 'same_hand', 'is_barrel', 'hard_hit', 'near_barrel', 'exit_velo', 'launch_angle', 'spray_angle', 'hangtime', 'ev_la_product', 'ev_la_sqrt', 'est_distance', 'player_ev_mean50', 'player_ev_std50', 'pitcher_ev_mean50', 'level_idx', 'season_centered', 'age_centered']
| column           |   original_null_count |   original_null_pct |   imputed_missing_count |   imputed_missing_pct |
|:-----------------|----------------------:|--------------------:|------------------------:|----------------------:|
| level_abbr       |                     0 |         0           |                       0 |           0           |
| age_bin          |                     0 |         0           |                       0 |           0           |
| la_bin           |                  9130 |         0.00678987  |                    9130 |           0.00678987  |
| spray_bin        |                  6227 |         0.00463094  |                    6227 |           0.00463094  |
| outcome_val      |                 63271 |         0.0470538   |                   63271 |           0.0470538   |
| hit_type         |                   201 |         0.000149481 |                     201 |           0.000149481 |
| outcome          |                     0 |         0           |                       0 |           0           |
| pitch_group      |                     0 |         0           |                       0 |           0           |
| batter_hand      |                     0 |         0           |                       0 |           0           |
| pitcher_hand     |                     0 |         0           |                       0 |           0           |
| hand_match       |                     0 |         0           |                       0 |           0           |
| pitch_hand_match |                     0 |         0           |                       0 |           0           |
| same_hand        |                     0 |         0           |                       0 |           0           |
| is_barrel        |                     0 |         0           |                       0 |           0           |
| hard_hit         |                     0 |         0           |                       0 |           0           |
| near_barrel      |                     0 |         0           |                       0 |           0           |
🛠️  Nulls in X before fit_transform:
=== Null counts post-engineering ===
exit_velo         97979
launch_angle       9130
spray_angle        6227
hangtime          75968
hit_type            201
la_bin             9130
spray_bin          6227
ev_la_product     97981
est_distance     110411
ev_la_sqrt        97981
outcome_val       63271
dtype: int64
DEBUG: Pre-processing ordinal information
  • Column 'level_abbr': dtype=object, nunique=3
    Sample values: ['AA', 'MLB', 'AAA']
  • Column 'age_bin': dtype=category, nunique=4
    Sample values: [Interval(24.5, 26.3, closed='right'), Interval(28.9, 43.0, closed='right'), Interval(24.5, 26.3, closed='right')]
  • Column 'la_bin': dtype=category, nunique=5
    Sample values: [Interval(-89.685, -10.533, closed='right'), Interval(6.002, 19.631, closed='right'), Interval(19.631, 35.19, closed='right')]
  • Column 'spray_bin': dtype=category, nunique=3
    Sample values: [Interval(-12.664, 9.63, closed='right'), Interval(-179.916, -12.664, closed='right'), Interval(-12.664, 9.63, closed='right')]
  • Column 'outcome_val': dtype=float64, nunique=4
    Sample values: [0.0, 0.0, 0.0]
DEBUG: After string conversion
  • Column 'level_abbr': dtype=object, nunique=3
    Sample values: ['AAA', 'AAA', 'AAA']
  • Column 'age_bin': dtype=object, nunique=4
    Sample values: ['(26.3, 28.9]', '(24.5, 26.3]', '(24.5, 26.3]']
  • Column 'la_bin': dtype=object, nunique=5
    Sample values: ['(6.002, 19.631]', '(35.19, 89.875]', '(6.002, 19.631]']
  • Column 'spray_bin': dtype=object, nunique=3
    Sample values: ['(-179.916, -12.664]', '(-12.664, 9.63]', '(9.63, 179.962]']
  • Column 'outcome_val': dtype=object, nunique=4
    Sample values: ['1.0', '0.0', '2.0']
Detected ordinal categories: [('level_abbr', ['MLB', 'AAA', 'AA', 'MISSING']), ('age_bin', ['(26.3, 28.9]', '(24.5, 26.3]', '(28.9, 43.0]', '(17.099, 24.5]', 'MISSING']), ('la_bin', ['(-89.685, -10.533]', '(35.19, 89.875]', '(-10.533, 6.002]', '(19.631, 35.19]', '(6.002, 19.631]', 'MISSING']), ('spray_bin', ['(-179.916, -12.664]', '(-12.664, 9.63]', '(9.63, 179.962]', 'MISSING']), ('outcome_val', ['0.0', '1.0', '2.0', '3.0', 'MISSING'])]
DEBUG: Fitted transformer details
  • X_mat shape: (990200, 61)
  • Stored 5 ordinal feature names
  • Stored 5 category lists
  • Nominal encoder has 11 category lists
  • Transformer returns 61 feature names
    First 5: ['launch_angle' 'spray_angle' 'hangtime' 'ev_la_product' 'ev_la_sqrt']
DEBUG: Checking pre-conversion ordinal values
  • Column 'level_abbr': 3 unique values, sample: ['AAA', 'AA', 'AAA']
  • Column 'age_bin': 4 unique values, sample: [Interval(26.3, 28.9, closed='right'), Interval(26.3, 28.9, closed='right'), Interval(17.099, 24.5, closed='right')]
  • Column 'la_bin': 5 unique values, sample: [Interval(35.19, 89.875, closed='right'), Interval(35.19, 89.875, closed='right'), Interval(6.002, 19.631, closed='right')]
  • Column 'spray_bin': 3 unique values, sample: [Interval(9.63, 179.962, closed='right'), Interval(9.63, 179.962, closed='right'), Interval(-179.916, -12.664, closed='right')]
  • Column 'outcome_val': 4 unique values, sample: [0.0, 1.0, 0.0]
DEBUG: After string conversion
  • Column 'level_abbr': 3 unique values, sample: ['MLB', 'AAA', 'AAA']
  • Column 'age_bin': 4 unique values, sample: ['(17.099, 24.5]', '(26.3, 28.9]', '(17.099, 24.5]']
  • Column 'la_bin': 5 unique values, sample: ['(-89.685, -10.533]', '(19.631, 35.19]', '(35.19, 89.875]']
  • Column 'spray_bin': 3 unique values, sample: ['(9.63, 179.962]', '(9.63, 179.962]', '(9.63, 179.962]']
  • Column 'outcome_val': 4 unique values, sample: ['1.0', '1.0', '0.0']
DEBUG: Setting 12470 values to 'MISSING' in 'outcome_val'
DEBUG: No unseen values detected
Processed shapes: (990200, 61) (247394, 61)
==========Example of inverse transform:==========
DEBUG: Inverse transform information
  • X_trans shape: (990200, 61)
  • Transformer 'num' with 12 columns: ['launch_angle', 'spray_angle', 'hangtime']...
  • Transformer 'ord' with 5 columns: ['level_abbr', 'age_bin', 'la_bin']...
  • Transformer 'nom' with 11 columns: ['hit_type', 'outcome', 'pitch_group']...
DEBUG: Will reconstruct 28 original features
DEBUG: Transformer 'num' produced 17 columns from 12 inputs
DEBUG: Inverse scaled 'num' -> shape (990200, 12)
DEBUG: Created DataFrame for 'num' with shape (990200, 12)
DEBUG: Transformer 'ord' produced 5 columns from 5 inputs
DEBUG: Inverting 'ord' with OrdinalEncoder
    - Col 0: 4 categories
    - Col 1: 5 categories
    - Col 2: 6 categories
    - Col 3: 4 categories
    - Col 4: 5 categories
DEBUG: Inverse transformed 'ord' -> shape (990200, 5)
DEBUG: Created DataFrame for 'ord' with shape (990200, 5)
DEBUG: Transformer 'nom' produced 39 columns from 11 inputs
DEBUG: Inverting 'nom' with OneHotEncoder
    - Col 0: 5 categories
    - Col 1: 5 categories
    - Col 2: 3 categories
    - Col 3: 3 categories
    - Col 4: 2 categories
    - Col 5: 6 categories
    - Col 6: 18 categories
    - Col 7: 2 categories
    - Col 8: 2 categories
    - Col 9: 2 categories
    - Col 10: 2 categories
DEBUG: Inverse transformed 'nom' -> shape (990200, 11)
DEBUG: Created DataFrame for 'nom' with shape (990200, 11)
DEBUG: Concatenated result with shape (990200, 28), columns: ['launch_angle', 'spray_angle', 'hangtime', 'ev_la_product', 'ev_la_sqrt']...

✅ Inverse‐transformed head (should mirror your original X_train):
   launch_angle  spray_angle  hangtime  ...  is_barrel  hard_hit  near_barrel
0      -20.7923     -44.3123    0.1277  ...      False     False        False
1       44.5676       3.1201    6.0871  ...      False     False        False
2       49.3999     -32.1939    4.3439  ...      False     False        False
3        0.6769       5.6467    0.3372  ...      False      True        False
4       37.1261     -26.3477    5.5243  ...      False     False        False

[5 rows x 28 columns]
Shape: (990200, 28) → original X_train shape before transform: (990200, 61)
